---
- name: Installation and configuration unattended upgrades (Debian and RockyLinux)
  hosts: all
  tasks:
    - name: apt update && apt upgrade
      apt:
        update_cache: true
        upgrade: yes
      when: ansible_facts['os_family'] == 'Debian'

    - name: dnf upgrade
      dnf:
        name: '*'
        state: latest
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Install packages
      apt:
        name: unattended-upgrades
        state: present
        update_cache: true
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install package on RockyLinu
      yum:
        name: dnf-automatic
        state: latest
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Configure unattended-upgrades
      shell: echo "unattended-upgrades unattended-upgrades/enable_auto_updates boolean true" | debconf-set-selections
      when: ansible_facts['os_family'] == 'Debian'

    - name: Apply unattended-upgrades
      shell: dpkg-reconfigure -f noninteractive --priority=low unattended-upgrades
      when: ansible_facts['os_family'] == 'Debian'

    - name: Enable updates
      lineinfile:
         path: /etc/apt/apt.conf.d/50unattended-upgrades 
         regexp: '^//\s+"origin=Debian,codename=\${distro_codename}-updates";$'
         line: '"origin=Debian,codename=${distro_codename}-updates";'
      when: ansible_facts['os_family'] == 'Debian'

    - name: Enable proposed-updates
      lineinfile:
         path: /etc/apt/apt.conf.d/50unattended-upgrades 
         regexp: '^//\s+"origin=Debian,codename=\${distro_codename}-proposed-updates";$'
         line: '"origin=Debian,codename=${distro_codename}-proposed-updates";;'
      when: ansible_facts['os_family'] == 'Debian'

    - name: Restart service on Debian
      systemd:
        name: unattended-upgrades.service
        state: restarted
      when: ansible_facts['os_family'] == 'Debian'
    
    # RockyLinux

    - name: Apply updates
      lineinfile:
         path: /etc/dnf/automatic.conf 
         search_string: 'apply_updates = no'
         line: 'apply_updates = yes'
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Enable and start service
      systemd: 
          name: dnf-automatic.timer
          enabled: true
          state: started
      when: ansible_facts['os_family'] == 'RedHat'

